#include<bits/stdc++.h>
using namespace std;
int const N=233333;
int n,k,cur,ans=N,c[N],fa[N],ldfn[N],rdfn[N],
	mn[N],mx[N],dfn[N],low[N],vis[N],flg[N];
stack<int>s;
vector<int>e[N],g[N];
void dfs(int x,int pre){
	ldfn[x]=++cur;
	for(int y:e[x])
		if(y^pre)
			dfs(y,fa[y]=x);
	rdfn[x]=cur;
}
void tarjan(int x){
	dfn[x]=low[x]=++cur,vis[x]=flg[x]=1,s.push(x);
	for(int y:g[x])
		if(!dfn[y])
			tarjan(y),low[x]=min(low[x],low[y]),flg[x]&=flg[y];
		else if(vis[y])
			low[x]=min(low[x],low[y]);
		else
			flg[x]=0;
	if(dfn[x]==low[x]){
		int cnt=0;
		while(1){
			int t=s.top();s.pop();
			vis[t]=0,cnt++;
			if(x==t)break;
		}
		if(flg[x])
			ans=min(ans,cnt-1),flg[x]=0;
	}
}
int main(){
	ios::sync_with_stdio(0);
	cin>>n>>k;
	for(int i=1,x,y;i<n;i++){
		cin>>x>>y;
		e[x].push_back(y);
		e[y].push_back(x);
	}
	for(int i=1;i<=n;i++)
		cin>>c[i];
	dfs(1,0);
	memset(mn,0x3f,sizeof mn);
	for(int i=1;i<=n;i++)
		mx[c[i]]=max(mx[c[i]],rdfn[i]),
		mn[c[i]]=min(mn[c[i]],ldfn[i]);
	for(int i=1;i<=n;i++)
		if(mn[c[i]]<ldfn[i]||rdfn[i]<mx[c[i]])
			g[c[i]].push_back(c[fa[i]]);
	for(int i=1;i<=k;i++)
		if(!dfn[i])
			tarjan(i);
	cout<<ans<<"\n";
}